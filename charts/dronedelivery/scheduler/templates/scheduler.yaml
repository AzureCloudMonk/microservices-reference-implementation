#  ------------------------------------------------------------
#   Copyright (c) Microsoft Corporation.  All rights reserved.
#   Licensed under the MIT License (MIT). See License.txt in the repo root for license information.
#  ------------------------------------------------------------

###################################################################################################
# Scheduler service
###################################################################################################
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Chart.Name }}-secrets
type: Opaque
data:
  eventhub_name: {{ .Values.eventhub_name}} 
  eventhub_sas_connection_string: {{ .Values.eventhub_sas_connection_string}} 
  storageaccount_key: {{ .Values.storageaccount_key}} 
  queueconstring: {{ .Values.queueconstring}} 
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{ .Chart.Name }}
  labels:                 # In API version apps/v1beta2, .metadata.labels no longer default to .spec.template.metadata.labels. 
    app: {{ .Chart.Name }} 
    version: {{ .Chart.Version }} 
    bc: {{ .Release.Namespace }} 
    co: {{ .Values.company }}
spec:
  serviceName: {{ .Chart.Name }}
  replicas: {{ default 1 .Values.replicasCount }}
  selector:                # In API version apps/v1beta2, .spec.selector no longer default to .spec.template.metadata.labels. 
    matchLabels:           # spec.selector is immutable after creation of the Deployment in apps/v1beta2.
      app: {{ .Chart.Name }}         
  template:                # A Deployment may terminate Pods whose labels match the selector if their template is different from .spec.template
    metadata:
      labels:
        app: {{ .Chart.Name }} 
        version: {{ .Chart.Version }}
        bc: {{ .Release.Namespace }} 
        co: {{ .Values.company }} 
      annotations:
        team: {{ .Values.team }} 
    spec:
      containers:
      - name: {{ .Chart.Name }} 
        image: {{ .Values.image }} 
        imagePullPolicy: IfNotPresent
        env:
           # Export K8s secrets
           - name: HOST_POD_NAME
             valueFrom:
               fieldRef:
                 fieldPath: metadata.name
           - name: SERVICE_URI_ACCOUNT
             value: http://account/api/Account
           - name: SERVICE_URI_DELIVERY
             value: http://delivery/api/Deliveries
           - name: SERVICE_URI_DRONE
             value: http://dronescheduler/api/DroneDeliveries
           - name: SERVICE_URI_PACKAGE
             value: http://package/api/packages
           - name: SERVICE_URI_THIRDPARTY
             value: http://thirdparty/api/ThirdPartyDeliveries
           # set this env to read from period of time
           # otherwise is from last known checkpoint
           - name: CHECKP_TIME_MINUTES
             value: "0"
           - name: IOTHUB_EVENTHUB_NAME
             valueFrom:
               secretKeyRef: 
                 name: scheduler-secrets
                 key: eventhub_name 
           - name: IOTHUB_EVENTHUB_ENDPOINT
             valueFrom:
               secretKeyRef: 
                 name: scheduler-secrets
                 key: eventhub_sas_connection_string 
           - name: IOTHUB_ACCESS_CONNSTRING
             valueFrom:
               secretKeyRef: 
                 name: scheduler-secrets
                 key: eventhub_sas_connection_string
           - name: IOTHUB_CHECKPOINT_AZSTORAGE_ACCOUNT
             valueFrom:
               secretKeyRef: 
                 name: scheduler-secrets
                 key: storageaccount_name
           - name: IOTHUB_CHECKPOINT_AZSTORAGE_KEY
             valueFrom:
               secretKeyRef: 
                 name: scheduler-secrets
                 key: storageaccount_key
           - name: STORAGE_QUEUE_NAME
             value: "CompensatingTransactionQueue"
           - name: STORAGE_QUEUE_CONNECTION_STRING
             valueFrom:
               secretKeyRef:
                 name: scheduler-secrets
                 key: queueconstring
           - name: IOTHUB_EVENTHUB_PARTITIONS
             value: {{ default 1 .Values.replicasCount | quote}}
           # Integration with l5d Daemon Sets
           - name: NODE_NAME
             valueFrom:
               fieldRef:
                 fieldPath: spec.nodeName
           - name: POD_IP
             valueFrom:
               fieldRef:
                 fieldPath: status.podIP
           - name: http_proxy
             value: $(NODE_NAME):4140
           - name: CORRELATION_HEADER
             value: {{ .Values.correlationHeader }} 
        {{- if .Values.resources }}
        resources:
           requests:
             cpu: {{ .Values.resources.cpu }}
             memory: {{ .Values.resources.memory }}
           limits:
             cpu: {{ .Values.resources.cpu }}
             memory: {{ .Values.resources.memory }}
        {{- end }}
